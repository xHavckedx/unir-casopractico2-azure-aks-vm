---
- hosts: azure_vms
  become: true
  vars:
    acr_server: "{{ lookup('env', 'ACR_LOGIN_SERVER') }}"
    acr_username: "{{ lookup('env', 'ACR_ADMIN_USERNAME') }}"
    acr_password: "{{ lookup('env', 'ACR_ADMIN_PASSWORD') }}"
    container_image: "casopractico2lgc2acr.azurecr.io/webapp-lgc:casopractico2"
    image_name: "webapp-lgc"
    user_folder: "/home/leo_gomez"

  tasks:
    - name: Ensure Python is installed
      raw: sudo apt-get update && sudo apt-get install -y python3

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - podman
        - httpd-tools

    - name: Login to ACR
      command: >
        podman login {{ acr_server }}
        --username {{ acr_username }}
        --password {{ acr_password }}

    - name: Copy Dockerfile to the VM
      copy:
        src: webserver/Dockerfile
        dest: {{ user_folder }}/Dockerfile

    - name: Copy nginx.conf to the VM
      copy:
        src: webserver/nginx.conf
        dest: {{ user_folder }}/nginx.conf

    - name: Copy entrypoint.sh to the VM
      copy:
        src: webserver/entrypoint.sh
        dest: {{ user_folder }}/entrypoint.sh

    - name: Copy index.html to the VM
      copy:
        src: webserver/index.html
        dest: {{ user_folder }}/index.html

    - name: Build Podman image
      command: >
        podman build -t {{ container_image }} {{ user_folder }}

    - name: Push Podman image to ACR
      command: >
        podman push {{ container_image }}

    - name: Run web application container
      command: >
        podman run -d --name {{ image_name }} -p 443:443
        -v {{ user_folder }}/certs:/etc/nginx/certs
        {{ container_image }}

    - name: Setup container as a systemd service
      copy:
        dest: /etc/systemd/system/webapp.service
        content: |
          [Unit]
          Description=Web Application Container
          After=network.target

          [Service]
          ExecStart=/usr/bin/podman start -a {{ image_name }}
          ExecStop=/usr/bin/podman stop -t 2 {{ image_name }}
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start the web application service
      systemd:
        name: webapp
        enabled: true
        state: started
